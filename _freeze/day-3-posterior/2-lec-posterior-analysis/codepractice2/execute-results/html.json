{
  "hash": "33b6f8dfaf4956218715968664626e2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"code_work\"\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lme4) # lme4 package contains sleep study data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code}\ndata(sleepstudy)\nbaseline <- sleepstudy %>%\n  filter(Days==2) # Day 2 is baseline, days 0-1 are training\nbaseline %>%\n  ggplot(aes(x=Reaction)) +\n  geom_histogram() + \n  labs(x=\"Reaction Time (ms)\") + \n  geom_vline(xintercept=275, col=\"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](codepractice2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(rstanarm)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Rcpp\nThis is rstanarm version 2.32.1\n- See https://mc-stan.org/rstanarm/articles/priors for changes to default priors!\n- Default priors may change, so it's safest to specify priors, even if equivalent to the defaults.\n- For execution on a local, multicore CPU with excess RAM we recommend calling\n  options(mc.cores = parallel::detectCores())\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(bayesplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis is bayesplot version 1.11.1\n- Online documentation and vignettes at mc-stan.org/bayesplot\n- bayesplot theme set to bayesplot::theme_default()\n   * Does _not_ affect other ggplot2 plots\n   * See ?bayesplot_theme_set for details on theme setting\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom.mixed)\n\nfit <- stan_glm(data = baseline, family = gaussian,\n                Reaction ~ 1, #only estimating a mean (Intercept) and variance\n                prior_intercept = normal(300, 50),\n                # prior for mu has mean 300 and sd 50\n                prior_aux = cauchy(0, 40),\n                # prior for sigma is half of a mean 0, scale 40 Cauchy\n                chains = 4, iter = 5000*2, seed = 84735, refresh = FALSE\n)\n\n\nmcmc_trace(fit) # show trace plots\n```\n\n::: {.cell-output-display}\n![](codepractice2_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nmcmc_dens_overlay(fit) # show posteriors\n```\n\n::: {.cell-output-display}\n![](codepractice2_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\nrhat(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)       sigma \n   1.000134    1.000209 \n```\n\n\n:::\n\n```{.r .cell-code}\nneff_ratio(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(Intercept)       sigma \n     0.5448      0.5251 \n```\n\n\n:::\n\n```{.r .cell-code}\nmean(as.data.frame(fit)$\"(Intercept)\"<275)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8917\n```\n\n\n:::\n\n```{.r .cell-code}\ntidy(fit,\n     effects = c(\"fixed\", \"aux\"),\n     conf.int = TRUE,\n     conf.level = 0.95) # written summary of the output\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term        estimate std.error conf.low conf.high\n  <chr>          <dbl>     <dbl>    <dbl>     <dbl>\n1 (Intercept)    266.       6.97    252.      281. \n2 sigma           30.3      5.65     22.3      44.2\n3 mean_PPD       266.      10.4     246.      287. \n```\n\n\n:::\n\n```{.r .cell-code}\nsleepdep <- sleepstudy %>%\n  filter(Days %in% c(2,3)) %>%\n  pivot_wider(names_from = Days, names_prefix=\"Day\", \n              values_from = Reaction, id_cols=Subject) %>%\n  mutate(diff32=Day3-Day2)\n  # consider day 2 baseline and day 3, the first value from a sleep-deprived state, and calculate difference\n  # positive differences indicate longer reaction times when sleep-deprived\nsleepdep %>%\n  ggplot(aes(x=diff32)) +\n  geom_histogram() + \n  labs(x=\"Difference in Reaction Time (ms) when Sleep Deprived\") + \n  geom_vline(xintercept=0, col=\"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](codepractice2_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}