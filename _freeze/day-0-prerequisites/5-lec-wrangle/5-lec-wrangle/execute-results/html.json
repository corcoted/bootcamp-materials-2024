{
  "hash": "6663359581dbadabf6371a794c9b454e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Wrangling\"\nsubtitle: \"Prerequisites\"\nexecute:\n  echo: true\nformat: \n  revealjs:\n    slide-number: true\n    incremental: true\n    theme: [\"../../templates/slides-style.scss\"]\n    logo: https://www.stat.uci.edu/bayes-bats/img/logo.png\n    title-slide-attributes: \n      data-background-image: https://www.stat.uci.edu/bayes-bats/img/logo.png\n      data-background-size: 12%\n      data-background-position: 50% 75%\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n:::{.font75}\n\nThe Pipe Operator `%>%`\n\n:::\n\n##\n\n:::{.font75} \n\nThree solutions to a single problem\n\n:::\n\n##\n\nWhat is the average of 4, 8, 16 approximately?\n\n##\n\n1.What is the average of **4, 8, 16** approximately?\n\n\n2.What is the **average** of 4, 8, 16 approximately?\n\n\n3.What is the average of 4, 8, 16 **approximately**?\n\n##\n\n:::{.font75}\n\nSolution 1: Functions within Functions\n\n:::\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(4, 8, 16)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  4  8 16\n```\n\n\n:::\n:::\n\n\n\n\n\n<hr>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(c(4, 8, 16))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.333333\n```\n\n\n:::\n:::\n\n\n\n\n\n<hr>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(mean(c(4, 8, 16)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n\n##\n\n**Problem with writing functions within functions**\n\nThings will get messy and more difficult to read and debug as we deal with more complex operations on data.\n\n\n## \n\n:::{.font75} \n\nSolution 2: Creating Objects\n\n:::\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbers <- c(4, 8, 16)\nnumbers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  4  8 16\n```\n\n\n:::\n:::\n\n\n\n\n<hr>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_number <- mean(numbers)\navg_number\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9.333333\n```\n\n\n:::\n:::\n\n\n\n\n\n<hr>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(avg_number)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n\n\n##\n\n**Problem with creating many objects**\n\nWe will end up with too many objects in `Environment`. \n\n\n\n##\n\n:::{.font75}\n\nSolution 3: The (forward) Pipe Operator %>%\n\n:::\n\n<hr>\n\n:::{.font75}\n\nShortcut: <br>Ctrl (Command) + Shift + M\n\n:::\n\n##\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(4, 8, 16) %>% \n  mean() %>% \n  round()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: {.column width=\"50%\"}\n\nCombine 4, 8, and 16 `and then`  \nTake the mean   `and then`  \nRound the output\n\n:::\n\n::::\n\n##\n\nThe output of the first function is the first argument of the second function.\n\n\n##\n\nDo you recall composite functions such as $f \\circ g(x)$?\n\n\nNow we have $f \\circ g \\circ h (x)$ or `round(mean(c(4, 8, 16)))`\n\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh(x) %>% \n  g() %>% \n  f()\n```\n:::\n\n\n\n:::\n\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(4, 8, 16) %>% \n  mean() %>% \n  round()\n```\n:::\n\n\n\n:::\n\n::::\n\n##\n\n:::{.font75}\n\nSubsetting data frames\n\n:::\n\n\n##\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 68,564\nColumns: 35\n$ `Row ID`                       <chr> \"3-1000027830ctFu\", \"3-1000155488ctFu\",…\n$ Year                           <dbl> 2013, 2013, 2013, 2013, 2013, 2013, 201…\n$ `Department Title`             <chr> \"Police (LAPD)\", \"Police (LAPD)\", \"Poli…\n$ `Payroll Department`           <dbl> 4301, 4302, 4301, 4301, 4302, 4302, 430…\n$ `Record Number`                <dbl> 1000027830, 1000155488, 1000194958, 100…\n$ `Job Class Title`              <chr> \"Police Detective II\", \"Clerk Typist\", …\n$ `Employment Type`              <chr> \"Full Time\", \"Full Time\", \"Full Time\", …\n$ `Hourly or Event Rate`         <dbl> 53.16, 23.77, 60.80, 60.98, 45.06, 34.4…\n$ `Projected Annual Salary`      <dbl> 110998.08, 49623.67, 126950.40, 127326.…\n$ `Q1 Payments`                  <dbl> 24931.20, 11343.96, 24184.00, 29391.20,…\n$ `Q2 Payments`                  <dbl> 29181.61, 13212.37, 28327.20, 36591.20,…\n$ `Q3 Payments`                  <dbl> 26545.80, 11508.36, 28744.20, 32904.81,…\n$ `Q4 Payments`                  <dbl> 29605.30, 13442.53, 33224.88, 37234.03,…\n$ `Payments Over Base Pay`       <dbl> 4499.12, 1844.82, 13192.43, 18034.53, 1…\n$ `% Over Base Pay`              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Total Payments`               <dbl> 110263.91, 49507.22, 114480.28, 136121.…\n$ `Base Pay`                     <dbl> 105764.79, 47662.40, 101287.85, 118086.…\n$ `Permanent Bonus Pay`          <dbl> 3174.12, 0.00, 7363.95, 7086.67, 0.00, …\n$ `Longevity Bonus Pay`          <dbl> 0.00, 1310.82, 0.00, 0.00, 1251.19, 172…\n$ `Temporary Bonus Pay`          <dbl> 1325.00, 0.00, 1205.00, 1325.00, 125.00…\n$ `Lump Sum Pay`                 <dbl> 0.00, 0.00, 2133.18, 0.00, 2068.80, 0.0…\n$ `Overtime Pay`                 <dbl> 0.00, 0.00, 4424.32, 9839.33, 0.00, 0.0…\n$ `Other Pay & Adjustments`      <dbl> 0.00, 534.00, -1934.02, -216.47, -2068.…\n$ `Other Pay (Payroll Explorer)` <dbl> 4499.12, 1844.82, 8768.11, 8195.20, 137…\n$ MOU                            <chr> \"24\", \"3\", \"24\", \"24\", \"12\", \"3\", \"24\",…\n$ `MOU Title`                    <chr> \"POLICE OFFICERS UNIT\", \"CLERICAL UNIT\"…\n$ `FMS Department`               <dbl> 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,…\n$ `Job Class`                    <chr> \"2223\", \"1358\", \"2227\", \"2232\", \"1839\",…\n$ `Pay Grade`                    <chr> \"2\", \"0\", \"1\", \"1\", \"0\", \"2\", \"3\", \"1\",…\n$ `Average Health Cost`          <dbl> 11651.40, 10710.24, 11651.40, 11651.40,…\n$ `Average Dental Cost`          <dbl> 898.08, 405.24, 898.08, 898.08, 405.24,…\n$ `Average Basic Life`           <dbl> 191.04, 11.40, 191.04, 191.04, 11.40, 1…\n$ `Average Benefit Cost`         <dbl> 12740.52, 11126.88, 12740.52, 12740.52,…\n$ `Benefits Plan`                <chr> \"Police\", \"City\", \"Police\", \"Police\", \"…\n$ `Job Class Link`               <chr> \"http://per.lacity.org/perspecs/2223.pd…\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd <- clean_names(lapd)\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 68,564\nColumns: 35\n$ row_id                     <chr> \"3-1000027830ctFu\", \"3-1000155488ctFu\", \"3-…\n$ year                       <dbl> 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ department_title           <chr> \"Police (LAPD)\", \"Police (LAPD)\", \"Police (…\n$ payroll_department         <dbl> 4301, 4302, 4301, 4301, 4302, 4302, 4301, 4…\n$ record_number              <dbl> 1000027830, 1000155488, 1000194958, 1000232…\n$ job_class_title            <chr> \"Police Detective II\", \"Clerk Typist\", \"Pol…\n$ employment_type            <chr> \"Full Time\", \"Full Time\", \"Full Time\", \"Ful…\n$ hourly_or_event_rate       <dbl> 53.16, 23.77, 60.80, 60.98, 45.06, 34.42, 4…\n$ projected_annual_salary    <dbl> 110998.08, 49623.67, 126950.40, 127326.24, …\n$ q1_payments                <dbl> 24931.20, 11343.96, 24184.00, 29391.20, 208…\n$ q2_payments                <dbl> 29181.61, 13212.37, 28327.20, 36591.20, 241…\n$ q3_payments                <dbl> 26545.80, 11508.36, 28744.20, 32904.81, 215…\n$ q4_payments                <dbl> 29605.30, 13442.53, 33224.88, 37234.03, 252…\n$ payments_over_base_pay     <dbl> 4499.12, 1844.82, 13192.43, 18034.53, 1376.…\n$ percent_over_base_pay      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_payments             <dbl> 110263.91, 49507.22, 114480.28, 136121.24, …\n$ base_pay                   <dbl> 105764.79, 47662.40, 101287.85, 118086.71, …\n$ permanent_bonus_pay        <dbl> 3174.12, 0.00, 7363.95, 7086.67, 0.00, 0.00…\n$ longevity_bonus_pay        <dbl> 0.00, 1310.82, 0.00, 0.00, 1251.19, 1726.16…\n$ temporary_bonus_pay        <dbl> 1325.00, 0.00, 1205.00, 1325.00, 125.00, 68…\n$ lump_sum_pay               <dbl> 0.00, 0.00, 2133.18, 0.00, 2068.80, 0.00, 0…\n$ overtime_pay               <dbl> 0.00, 0.00, 4424.32, 9839.33, 0.00, 0.00, 4…\n$ other_pay_adjustments      <dbl> 0.00, 534.00, -1934.02, -216.47, -2068.80, …\n$ other_pay_payroll_explorer <dbl> 4499.12, 1844.82, 8768.11, 8195.20, 1376.19…\n$ mou                        <chr> \"24\", \"3\", \"24\", \"24\", \"12\", \"3\", \"24\", \"24…\n$ mou_title                  <chr> \"POLICE OFFICERS UNIT\", \"CLERICAL UNIT\", \"P…\n$ fms_department             <dbl> 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,…\n$ job_class                  <chr> \"2223\", \"1358\", \"2227\", \"2232\", \"1839\", \"22…\n$ pay_grade                  <chr> \"2\", \"0\", \"1\", \"1\", \"0\", \"2\", \"3\", \"1\", \"B\"…\n$ average_health_cost        <dbl> 11651.40, 10710.24, 11651.40, 11651.40, 107…\n$ average_dental_cost        <dbl> 898.08, 405.24, 898.08, 898.08, 405.24, 405…\n$ average_basic_life         <dbl> 191.04, 11.40, 191.04, 191.04, 11.40, 11.40…\n$ average_benefit_cost       <dbl> 12740.52, 11126.88, 12740.52, 12740.52, 111…\n$ benefits_plan              <chr> \"Police\", \"City\", \"Police\", \"Police\", \"City…\n$ job_class_link             <chr> \"http://per.lacity.org/perspecs/2223.pdf\", …\n```\n\n\n:::\n:::\n\n\n\n\n## subsetting variables/columns\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/data-wrangle.001.jpeg){width=80%}\n:::\n:::\n\n\n\n\n\n`select()`\n\n\n\n## subsetting observations/rows\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/data-wrangle.002.jpeg){width=80%}\n:::\n:::\n\n\n\n`slice()` and `filter()` \n\n##\n\n`select` is used to select certain variables in the data frame. \n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(lapd, year, base_pay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 2\n    year base_pay\n   <dbl>    <dbl>\n 1  2013  105765.\n 2  2013   47662.\n 3  2013  101288.\n 4  2013  118087.\n 5  2013   90322.\n 6  2013   62770.\n 7  2013   93718.\n 8  2013       0 \n 9  2013   51246.\n10  2013   74227.\n# ℹ 68,554 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  select(year, base_pay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 2\n    year base_pay\n   <dbl>    <dbl>\n 1  2013  105765.\n 2  2013   47662.\n 3  2013  101288.\n 4  2013  118087.\n 5  2013   90322.\n 6  2013   62770.\n 7  2013   93718.\n 8  2013       0 \n 9  2013   51246.\n10  2013   74227.\n# ℹ 68,554 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n##\n\n`select` can also be used to drop certain variables if used with a negative sign.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(lapd, -row_id, -department_title)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 33\n    year payroll_department record_number job_class_title        employment_type\n   <dbl>              <dbl>         <dbl> <chr>                  <chr>          \n 1  2013               4301    1000027830 Police Detective II    Full Time      \n 2  2013               4302    1000155488 Clerk Typist           Full Time      \n 3  2013               4301    1000194958 Police Sergeant I      Full Time      \n 4  2013               4301    1000232317 Police Lieutenant I    Full Time      \n 5  2013               4302    1000329284 Principal Storekeeper  Full Time      \n 6  2013               4302    1001124320 Police Service Repres… Full Time      \n 7  2013               4301    1001221822 Police Officer III     Full Time      \n 8  2013               4301    1001243583 Police Sergeant I      Full Time      \n 9  2013               4301    1001317832 Police Officer II      Full Time      \n10  2013               4301     100162910 Police Officer II      Full Time      \n# ℹ 68,554 more rows\n# ℹ 28 more variables: hourly_or_event_rate <dbl>,\n#   projected_annual_salary <dbl>, q1_payments <dbl>, q2_payments <dbl>,\n#   q3_payments <dbl>, q4_payments <dbl>, payments_over_base_pay <dbl>,\n#   percent_over_base_pay <dbl>, total_payments <dbl>, base_pay <dbl>,\n#   permanent_bonus_pay <dbl>, longevity_bonus_pay <dbl>,\n#   temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, overtime_pay <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n## Selection helpers\n\n`starts_with()`  \n`ends_with()`  \n`contains()`  \n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(lapd, starts_with(\"q\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 4\n   q1_payments q2_payments q3_payments q4_payments\n         <dbl>       <dbl>       <dbl>       <dbl>\n 1      24931.      29182.      26546.      29605.\n 2      11344.      13212.      11508.      13443.\n 3      24184       28327.      28744.      33225.\n 4      29391.      36591.      32905.      37234.\n 5      20813       24136       21518.      25231.\n 6      16057.      17927.      14150.      17052.\n 7      22162.      25664.      23404.      24586.\n 8          0           0         331.          0 \n 9      11941.      14330.      13404.      14537.\n10      17046.      20457.      18777.      21371.\n# ℹ 68,554 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(lapd, ends_with(\"pay\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 8\n   payments_over_base_pay percent_over_base_pay base_pay permanent_bonus_pay\n                    <dbl>                 <dbl>    <dbl>               <dbl>\n 1                  4499.                     0  105765.               3174.\n 2                  1845.                     0   47662.                  0 \n 3                 13192.                     0  101288.               7364.\n 4                 18035.                     0  118087.               7087.\n 5                  1376.                     0   90322.                  0 \n 6                  2415.                     0   62770.                  0 \n 7                  2099.                     0   93718.                866.\n 8                   331.                     0       0                   0 \n 9                  2967.                     0   51246.               1540.\n10                  3424.                     0   74227.               2233.\n# ℹ 68,554 more rows\n# ℹ 4 more variables: longevity_bonus_pay <dbl>, temporary_bonus_pay <dbl>,\n#   lump_sum_pay <dbl>, overtime_pay <dbl>\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(lapd, contains(\"pay\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,564 × 17\n   payroll_department q1_payments q2_payments q3_payments q4_payments\n                <dbl>       <dbl>       <dbl>       <dbl>       <dbl>\n 1               4301      24931.      29182.      26546.      29605.\n 2               4302      11344.      13212.      11508.      13443.\n 3               4301      24184       28327.      28744.      33225.\n 4               4301      29391.      36591.      32905.      37234.\n 5               4302      20813       24136       21518.      25231.\n 6               4302      16057.      17927.      14150.      17052.\n 7               4301      22162.      25664.      23404.      24586.\n 8               4301          0           0         331.          0 \n 9               4301      11941.      14330.      13404.      14537.\n10               4301      17046.      20457.      18777.      21371.\n# ℹ 68,554 more rows\n# ℹ 12 more variables: payments_over_base_pay <dbl>,\n#   percent_over_base_pay <dbl>, total_payments <dbl>, base_pay <dbl>,\n#   permanent_bonus_pay <dbl>, longevity_bonus_pay <dbl>,\n#   temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, overtime_pay <dbl>,\n#   other_pay_adjustments <dbl>, other_pay_payroll_explorer <dbl>,\n#   pay_grade <chr>\n```\n\n\n:::\n:::\n\n\n\n\n\n## subsetting variables/columns\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/data-wrangle.001.jpeg){width=80%}\n:::\n:::\n\n\n\n\n\n`select()`\n\n\n\n## subsetting observations/rows\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/data-wrangle.002.jpeg){width=80%}\n:::\n:::\n\n\n\n`slice()` and `filter()` \n\n##\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n`slice()` subsetting rows based on a row number.\n\nThe data below include all the rows from third to seventh. Including third and seventh.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nslice(lapd, 3:7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 35\n  row_id  year department_title payroll_department record_number job_class_title\n  <chr>  <dbl> <chr>                         <dbl>         <dbl> <chr>          \n1 3-100…  2013 Police (LAPD)                  4301    1000194958 Police Sergean…\n2 3-100…  2013 Police (LAPD)                  4301    1000232317 Police Lieuten…\n3 3-100…  2013 Police (LAPD)                  4302    1000329284 Principal Stor…\n4 3-100…  2013 Police (LAPD)                  4302    1001124320 Police Service…\n5 3-100…  2013 Police (LAPD)                  4301    1001221822 Police Officer…\n# ℹ 29 more variables: employment_type <chr>, hourly_or_event_rate <dbl>,\n#   projected_annual_salary <dbl>, q1_payments <dbl>, q2_payments <dbl>,\n#   q3_payments <dbl>, q4_payments <dbl>, payments_over_base_pay <dbl>,\n#   percent_over_base_pay <dbl>, total_payments <dbl>, base_pay <dbl>,\n#   permanent_bonus_pay <dbl>, longevity_bonus_pay <dbl>,\n#   temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, overtime_pay <dbl>,\n#   other_pay_adjustments <dbl>, other_pay_payroll_explorer <dbl>, mou <chr>, …\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n::: {.column width=\"45%\"}\n\n`filter()` subsetting rows based on a condition.\n\nThe data below includes rows when the recorded year is 2018.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(lapd, year == 2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 35\n   row_id            year department_title payroll_department record_number\n   <chr>            <dbl> <chr>                         <dbl>         <dbl>\n 1 8-1000027830ctFu  2018 Police (LAPD)                  4301    1000027830\n 2 8-1000194958ctFu  2018 Police (LAPD)                  4301    1000194958\n 3 8-1000232317ctFu  2018 Police (LAPD)                  4301    1000232317\n 4 8-1001124320ctFu  2018 Police (LAPD)                  4302    1001124320\n 5 8-1001221822ctFu  2018 Police (LAPD)                  4301    1001221822\n 6 8-1001317832ctFu  2018 Police (LAPD)                  4301    1001317832\n 7 8-100162910ctFu   2018 Police (LAPD)                  4301     100162910\n 8 8-1001675957ctFu  2018 Police (LAPD)                  4301    1001675957\n 9 8-1001884819ctFu  2018 Police (LAPD)                  4302    1001884819\n10 8-1001893163ctFu  2018 Police (LAPD)                  4302    1001893163\n# ℹ 14,814 more rows\n# ℹ 30 more variables: job_class_title <chr>, employment_type <chr>,\n#   hourly_or_event_rate <dbl>, projected_annual_salary <dbl>,\n#   q1_payments <dbl>, q2_payments <dbl>, q3_payments <dbl>, q4_payments <dbl>,\n#   payments_over_base_pay <dbl>, percent_over_base_pay <dbl>,\n#   total_payments <dbl>, base_pay <dbl>, permanent_bonus_pay <dbl>,\n#   longevity_bonus_pay <dbl>, temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n##\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n### Relational Operators in R\n\n\n| Operator | Description              |\n|----------|--------------------------|\n| <        | Less than                |\n| >        | Greater than             |\n| <=       | Less than or equal to    |\n| >=       | Greater than or equal to |\n| ==       | Equal to                 |\n| !=       | Not equal to             |\n\n:::\n\n\n::: {.column width=\"50%\"}\n\n\n\n### Logical Operators in R\n\n| Operator | Description |\n|----------|-------------|\n| &        | and         |\n| &#124;   | or          |\n\n:::\n\n::::\n\n##\n\nQ. According to [datausa.io](https://datausa.io/profile/geo/los-angeles-ca#:~:text=In%202018%2C%20Los%20Angeles%2C%20CA,%2462%2C474%2C%20a%203.78%25%20increase.) Los Angeles had a median household income of $62474 in 2018. How many LAPD staff members had a base pay higher than $62474 in year 2018 according to this data?\n<hr>\n\nMedian household income is **not** the same thing as median employee income. Our aim is data wrangling and not necessarily statistical analysis for now.\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(year == 2018 & base_pay > 62474)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11,690 × 35\n   row_id            year department_title payroll_department record_number\n   <chr>            <dbl> <chr>                         <dbl>         <dbl>\n 1 8-1000027830ctFu  2018 Police (LAPD)                  4301    1000027830\n 2 8-1000194958ctFu  2018 Police (LAPD)                  4301    1000194958\n 3 8-1000232317ctFu  2018 Police (LAPD)                  4301    1000232317\n 4 8-1001124320ctFu  2018 Police (LAPD)                  4302    1001124320\n 5 8-1001221822ctFu  2018 Police (LAPD)                  4301    1001221822\n 6 8-1001317832ctFu  2018 Police (LAPD)                  4301    1001317832\n 7 8-100162910ctFu   2018 Police (LAPD)                  4301     100162910\n 8 8-1001675957ctFu  2018 Police (LAPD)                  4301    1001675957\n 9 8-1001884819ctFu  2018 Police (LAPD)                  4302    1001884819\n10 8-1001893163ctFu  2018 Police (LAPD)                  4302    1001893163\n# ℹ 11,680 more rows\n# ℹ 30 more variables: job_class_title <chr>, employment_type <chr>,\n#   hourly_or_event_rate <dbl>, projected_annual_salary <dbl>,\n#   q1_payments <dbl>, q2_payments <dbl>, q3_payments <dbl>, q4_payments <dbl>,\n#   payments_over_base_pay <dbl>, percent_over_base_pay <dbl>,\n#   total_payments <dbl>, base_pay <dbl>, permanent_bonus_pay <dbl>,\n#   longevity_bonus_pay <dbl>, temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(year == 2018 & base_pay > 62474) %>% \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11690\n```\n\n\n:::\n:::\n\n\n\n##\n\nQ. How many observations are available between 2013 and 2015 including 2013 and 2015?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(year >= 2013 & year <= 2015)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 40,227 × 35\n   row_id            year department_title payroll_department record_number\n   <chr>            <dbl> <chr>                         <dbl>         <dbl>\n 1 3-1000027830ctFu  2013 Police (LAPD)                  4301    1000027830\n 2 3-1000155488ctFu  2013 Police (LAPD)                  4302    1000155488\n 3 3-1000194958ctFu  2013 Police (LAPD)                  4301    1000194958\n 4 3-1000232317ctFu  2013 Police (LAPD)                  4301    1000232317\n 5 3-1000329284ctFu  2013 Police (LAPD)                  4302    1000329284\n 6 3-1001124320ctFu  2013 Police (LAPD)                  4302    1001124320\n 7 3-1001221822ctFu  2013 Police (LAPD)                  4301    1001221822\n 8 3-1001243583ctFu  2013 Police (LAPD)                  4301    1001243583\n 9 3-1001317832ctFu  2013 Police (LAPD)                  4301    1001317832\n10 3-100162910ctFu   2013 Police (LAPD)                  4301     100162910\n# ℹ 40,217 more rows\n# ℹ 30 more variables: job_class_title <chr>, employment_type <chr>,\n#   hourly_or_event_rate <dbl>, projected_annual_salary <dbl>,\n#   q1_payments <dbl>, q2_payments <dbl>, q3_payments <dbl>, q4_payments <dbl>,\n#   payments_over_base_pay <dbl>, percent_over_base_pay <dbl>,\n#   total_payments <dbl>, base_pay <dbl>, permanent_bonus_pay <dbl>,\n#   longevity_bonus_pay <dbl>, temporary_bonus_pay <dbl>, lump_sum_pay <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n##\n\nQ. How many observations are available between 2013 and 2015 including 2013 and 2015?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(year >= 2013 & year <= 2015) %>% \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 40227\n```\n\n\n:::\n:::\n\n\n\n##\n\nQ. How many LAPD staff were employed full time in 2018?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(employment_type == \"Full Time\" & year == 2018) %>% \n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14664\n```\n\n\n:::\n:::\n\n\n\n##\n\nWe have done all sorts of selections, slicing, filtering on `lapd` but it has not changed at all. Why do you think so?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 68,564\nColumns: 35\n$ row_id                     <chr> \"3-1000027830ctFu\", \"3-1000155488ctFu\", \"3-…\n$ year                       <dbl> 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2…\n$ department_title           <chr> \"Police (LAPD)\", \"Police (LAPD)\", \"Police (…\n$ payroll_department         <dbl> 4301, 4302, 4301, 4301, 4302, 4302, 4301, 4…\n$ record_number              <dbl> 1000027830, 1000155488, 1000194958, 1000232…\n$ job_class_title            <chr> \"Police Detective II\", \"Clerk Typist\", \"Pol…\n$ employment_type            <chr> \"Full Time\", \"Full Time\", \"Full Time\", \"Ful…\n$ hourly_or_event_rate       <dbl> 53.16, 23.77, 60.80, 60.98, 45.06, 34.42, 4…\n$ projected_annual_salary    <dbl> 110998.08, 49623.67, 126950.40, 127326.24, …\n$ q1_payments                <dbl> 24931.20, 11343.96, 24184.00, 29391.20, 208…\n$ q2_payments                <dbl> 29181.61, 13212.37, 28327.20, 36591.20, 241…\n$ q3_payments                <dbl> 26545.80, 11508.36, 28744.20, 32904.81, 215…\n$ q4_payments                <dbl> 29605.30, 13442.53, 33224.88, 37234.03, 252…\n$ payments_over_base_pay     <dbl> 4499.12, 1844.82, 13192.43, 18034.53, 1376.…\n$ percent_over_base_pay      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_payments             <dbl> 110263.91, 49507.22, 114480.28, 136121.24, …\n$ base_pay                   <dbl> 105764.79, 47662.40, 101287.85, 118086.71, …\n$ permanent_bonus_pay        <dbl> 3174.12, 0.00, 7363.95, 7086.67, 0.00, 0.00…\n$ longevity_bonus_pay        <dbl> 0.00, 1310.82, 0.00, 0.00, 1251.19, 1726.16…\n$ temporary_bonus_pay        <dbl> 1325.00, 0.00, 1205.00, 1325.00, 125.00, 68…\n$ lump_sum_pay               <dbl> 0.00, 0.00, 2133.18, 0.00, 2068.80, 0.00, 0…\n$ overtime_pay               <dbl> 0.00, 0.00, 4424.32, 9839.33, 0.00, 0.00, 4…\n$ other_pay_adjustments      <dbl> 0.00, 534.00, -1934.02, -216.47, -2068.80, …\n$ other_pay_payroll_explorer <dbl> 4499.12, 1844.82, 8768.11, 8195.20, 1376.19…\n$ mou                        <chr> \"24\", \"3\", \"24\", \"24\", \"12\", \"3\", \"24\", \"24…\n$ mou_title                  <chr> \"POLICE OFFICERS UNIT\", \"CLERICAL UNIT\", \"P…\n$ fms_department             <dbl> 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70,…\n$ job_class                  <chr> \"2223\", \"1358\", \"2227\", \"2232\", \"1839\", \"22…\n$ pay_grade                  <chr> \"2\", \"0\", \"1\", \"1\", \"0\", \"2\", \"3\", \"1\", \"B\"…\n$ average_health_cost        <dbl> 11651.40, 10710.24, 11651.40, 11651.40, 107…\n$ average_dental_cost        <dbl> 898.08, 405.24, 898.08, 898.08, 405.24, 405…\n$ average_basic_life         <dbl> 191.04, 11.40, 191.04, 191.04, 11.40, 11.40…\n$ average_benefit_cost       <dbl> 12740.52, 11126.88, 12740.52, 12740.52, 111…\n$ benefits_plan              <chr> \"Police\", \"City\", \"Police\", \"Police\", \"City…\n$ job_class_link             <chr> \"http://per.lacity.org/perspecs/2223.pdf\", …\n```\n\n\n:::\n:::\n\n\n\n##\n\nMoving forward we are only going to focus on year 2018, and use `job_class_title`, `employment_type`, and `base_pay`. Let's clean our data accordingly and move on with the smaller `lapd` data that we need.\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(year == 2018) %>% \n  select(job_class_title, \n         employment_type, \n         base_pay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 3\n   job_class_title                  employment_type base_pay\n   <chr>                            <chr>              <dbl>\n 1 Police Detective II              Full Time        119322.\n 2 Police Sergeant I                Full Time        113271.\n 3 Police Lieutenant II             Full Time        148116 \n 4 Police Service Representative II Full Time         78677.\n 5 Police Officer III               Full Time        109374.\n 6 Police Officer II                Full Time         95002.\n 7 Police Officer II                Full Time         95379.\n 8 Police Officer II                Full Time         95388.\n 9 Equipment Mechanic               Full Time         80496 \n10 Detention Officer                Full Time         69640 \n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd <- \n  lapd %>% \n  filter(year == 2018) %>% \n  select(job_class_title, \n         employment_type, \n         base_pay)\n```\n:::\n\n\n\n\n##\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 14,824\nColumns: 3\n$ job_class_title <chr> \"Police Detective II\", \"Police Sergeant I\", \"Police Li…\n$ employment_type <chr> \"Full Time\", \"Full Time\", \"Full Time\", \"Full Time\", \"F…\n$ base_pay        <dbl> 119321.60, 113270.70, 148116.00, 78676.87, 109373.63, …\n```\n\n\n:::\n:::\n\n\n\n**Goal**: \n\nCreate a new variable called `base_pay_k` that represents `base_pay` in thousand dollars.\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  mutate(base_pay_k = base_pay/1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 4\n   job_class_title                  employment_type base_pay base_pay_k\n   <chr>                            <chr>              <dbl>      <dbl>\n 1 Police Detective II              Full Time        119322.      119. \n 2 Police Sergeant I                Full Time        113271.      113. \n 3 Police Lieutenant II             Full Time        148116       148. \n 4 Police Service Representative II Full Time         78677.       78.7\n 5 Police Officer III               Full Time        109374.      109. \n 6 Police Officer II                Full Time         95002.       95.0\n 7 Police Officer II                Full Time         95379.       95.4\n 8 Police Officer II                Full Time         95388.       95.4\n 9 Equipment Mechanic               Full Time         80496        80.5\n10 Detention Officer                Full Time         69640        69.6\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 14,824\nColumns: 3\n$ job_class_title <chr> \"Police Detective II\", \"Police Sergeant I\", \"Police Li…\n$ employment_type <chr> \"Full Time\", \"Full Time\", \"Full Time\", \"Full Time\", \"F…\n$ base_pay        <dbl> 119321.60, 113270.70, 148116.00, 78676.87, 109373.63, …\n```\n\n\n:::\n:::\n\n\n\n**Goal**: \n\nCreate a new variable called `base_pay_level` which has `Less Than 0`, `No Income`, `Less than Median and Greater than 0` and `Greater than Median`. We will consider $62474 as the median (from previous lecture).\n\n##\n\nLet's first check to see there is anyone earning exactly the median value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  filter(base_pay == 62474)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 3\n# ℹ 3 variables: job_class_title <chr>, employment_type <chr>, base_pay <dbl>\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  mutate(base_pay_level = case_when(\n    base_pay < 0 ~ \"Less than 0\", \n    base_pay == 0 ~ \"No Income\",\n    base_pay < 62474 & base_pay > 0 ~ \"Less than Median, Greater than 0\",\n    base_pay > 62474 ~ \"Greater than Median\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 4\n   job_class_title                  employment_type base_pay base_pay_level     \n   <chr>                            <chr>              <dbl> <chr>              \n 1 Police Detective II              Full Time        119322. Greater than Median\n 2 Police Sergeant I                Full Time        113271. Greater than Median\n 3 Police Lieutenant II             Full Time        148116  Greater than Median\n 4 Police Service Representative II Full Time         78677. Greater than Median\n 5 Police Officer III               Full Time        109374. Greater than Median\n 6 Police Officer II                Full Time         95002. Greater than Median\n 7 Police Officer II                Full Time         95379. Greater than Median\n 8 Police Officer II                Full Time         95388. Greater than Median\n 9 Equipment Mechanic               Full Time         80496  Greater than Median\n10 Detention Officer                Full Time         69640  Greater than Median\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\nWe can't really see what we have created \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  mutate(base_pay_level = case_when(\n    base_pay < 0 ~ \"Less than 0\", \n    base_pay == 0 ~ \"No Income\",\n    base_pay < 62474 & base_pay > 0 ~ \"Less than Median, Greater than 0\",\n    base_pay > 62474 ~ \"Greater than Median\")) %>% \n  select(base_pay_level)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 1\n   base_pay_level     \n   <chr>              \n 1 Greater than Median\n 2 Greater than Median\n 3 Greater than Median\n 4 Greater than Median\n 5 Greater than Median\n 6 Greater than Median\n 7 Greater than Median\n 8 Greater than Median\n 9 Greater than Median\n10 Greater than Median\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n\n##\n\nWe can use pipes with ggplot too! \n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  mutate(base_pay_level = case_when(\n    base_pay < 0 ~ \"Less than 0\", \n    base_pay == 0 ~ \"No Income\",\n    base_pay < 62474 & base_pay > 0 ~ \"Less than Median, Greater than 0\",\n    base_pay > 62474 ~ \"Greater than Median\")) %>% \n  select(base_pay_level) %>% \n  ggplot(aes(x = base_pay_level)) +\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](5-lec-wrangle_files/figure-revealjs/unnamed-chunk-42-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n::::\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 14,824\nColumns: 3\n$ job_class_title <chr> \"Police Detective II\", \"Police Sergeant I\", \"Police Li…\n$ employment_type <chr> \"Full Time\", \"Full Time\", \"Full Time\", \"Full Time\", \"F…\n$ base_pay        <dbl> 119321.60, 113270.70, 148116.00, 78676.87, 109373.63, …\n```\n\n\n:::\n:::\n\n\n\n**Goal**: \n\nMake `job_class_title` and `employment_type` factor variables. \n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  mutate(employment_type = as.factor(employment_type),\n         job_class_title = as.factor(job_class_title)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 3\n   job_class_title                  employment_type base_pay\n   <fct>                            <fct>              <dbl>\n 1 Police Detective II              Full Time        119322.\n 2 Police Sergeant I                Full Time        113271.\n 3 Police Lieutenant II             Full Time        148116 \n 4 Police Service Representative II Full Time         78677.\n 5 Police Officer III               Full Time        109374.\n 6 Police Officer II                Full Time         95002.\n 7 Police Officer II                Full Time         95379.\n 8 Police Officer II                Full Time         95388.\n 9 Equipment Mechanic               Full Time         80496 \n10 Detention Officer                Full Time         69640 \n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\n`as.factor()` - makes a vector factor  \n`as.numeric()` - makes a vector numeric  \n`as.integer()` - makes a vector integer  \n`as.double()` - makes a vector double  \n`as.character()` - makes a vector character  \n\n##\n\nOnce again we did not \"save\"\nanything into `lapd`. As we work on data cleaning it makes sense not to \"save\" the data frames. Once we see the final data frame we want then we can \"save\" (i.e. overwrite) it.\n\n##\n\nIn your lecture notes, you can do all the changes in this lecture in one long set of piped code. That's the beauty of piping!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd <- \n  lapd %>% \n  clean_names() %>% \n  filter(year == 2018) %>% \n  select(job_class_title, \n         employment_type, \n         base_pay) %>% \n    mutate(employment_type = as.factor(employment_type),\n           job_class_title = as.factor(job_class_title),\n           base_pay_level = case_when(\n             base_pay < 0 ~ \"Less than 0\", \n             base_pay == 0 ~ \"No Income\",\n             base_pay < 62474 & base_pay > 0 ~ \"Less than Median, Greater than 0\",\n             base_pay > 62474 ~ \"Greater than Median\")) \n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n## Word of caution\n\nThe functions `clean_names()`, `select()`, `filter()`, `mutate()` all take a data frame as the first argument. Even though we do not see it, the data frame is piped through from the previous step of code at each step. \nWhen we use these functions without the `%>%` we have to include the data frame explicitly.\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\nData frame is used as the first argument\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_names(lapd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 4\n   job_class_title                  employment_type base_pay base_pay_level     \n   <fct>                            <fct>              <dbl> <chr>              \n 1 Police Detective II              Full Time        119322. Greater than Median\n 2 Police Sergeant I                Full Time        113271. Greater than Median\n 3 Police Lieutenant II             Full Time        148116  Greater than Median\n 4 Police Service Representative II Full Time         78677. Greater than Median\n 5 Police Officer III               Full Time        109374. Greater than Median\n 6 Police Officer II                Full Time         95002. Greater than Median\n 7 Police Officer II                Full Time         95379. Greater than Median\n 8 Police Officer II                Full Time         95388. Greater than Median\n 9 Equipment Mechanic               Full Time         80496  Greater than Median\n10 Detention Officer                Full Time         69640  Greater than Median\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: {.column width=\"40%\"}\nData frame is piped\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  clean_names()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 4\n   job_class_title                  employment_type base_pay base_pay_level     \n   <fct>                            <fct>              <dbl> <chr>              \n 1 Police Detective II              Full Time        119322. Greater than Median\n 2 Police Sergeant I                Full Time        113271. Greater than Median\n 3 Police Lieutenant II             Full Time        148116  Greater than Median\n 4 Police Service Representative II Full Time         78677. Greater than Median\n 5 Police Officer III               Full Time        109374. Greater than Median\n 6 Police Officer II                Full Time         95002. Greater than Median\n 7 Police Officer II                Full Time         95379. Greater than Median\n 8 Police Officer II                Full Time         95388. Greater than Median\n 9 Equipment Mechanic               Full Time         80496  Greater than Median\n10 Detention Officer                Full Time         69640  Greater than Median\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n\n\n##\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n:::{.font50}\nData\n:::\n\nObservations\n\n\n\n:::\n\n\n::: {.column width=\"40%\"}\n\n:::{.font50}\nAggregate Data\n:::\n\nSummaries of observations\n\n:::\n\n::::\n\n\n##\n\n\n\n:::{.font75}\n\nAggregating Categorical Data\n\n:::\n\n##\n\nCategorical data are summarized with **counts** or **proportions**\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  count(employment_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  employment_type     n\n  <fct>           <int>\n1 Full Time       14664\n2 Part Time         132\n3 Per Event          28\n```\n\n\n:::\n:::\n\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  count(employment_type) %>% \n  mutate(prop = n/sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  employment_type     n    prop\n  <fct>           <int>   <dbl>\n1 Full Time       14664 0.989  \n2 Part Time         132 0.00890\n3 Per Event          28 0.00189\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Mean\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(lapd, \n          mean_base_pay = mean(base_pay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_base_pay\n          <dbl>\n1        85149.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Mean is not a good measure when the data are skewed\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](5-lec-wrangle_files/figure-revealjs/unnamed-chunk-52-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n## Median\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(lapd, \n          median(base_pay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `median(base_pay)`\n               <dbl>\n1             97601.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(lapd$base_pay)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 97600.66\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n\n\n## Quantiles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(lapd, quantile(base_pay, c(0.25, 0.50, 0.75)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  `quantile(base_pay, c(0.25, 0.5, 0.75))`\n                                     <dbl>\n1                                   67266.\n2                                   97601.\n3                                  109368.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n##\n\nRecall that we use multiple functions such as `mean()` and `median` within the summarize function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(lapd,\n          mean_base_pay = mean(base_pay),\n          med_base_pay = median(base_pay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  mean_base_pay med_base_pay\n          <dbl>        <dbl>\n1        85149.       97601.\n```\n\n\n:::\n:::\n\n\n\n##\n\n:::{.font75}\nAggregating Data by Groups\n\n:::\n\n##\n\n`group_by()`\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/data-wrangle.003.jpeg){fig-align='center' width=80%}\n:::\n:::\n\n\n\n`group_by()` separates the data frame by the groups. Any action following `group_by()` will be completed for each group separately.\n\n##\n\nQ. What is the median salary for each employment type?\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  group_by(employment_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14,824 × 4\n# Groups:   employment_type [3]\n   job_class_title                  employment_type base_pay base_pay_level     \n   <fct>                            <fct>              <dbl> <chr>              \n 1 Police Detective II              Full Time        119322. Greater than Median\n 2 Police Sergeant I                Full Time        113271. Greater than Median\n 3 Police Lieutenant II             Full Time        148116  Greater than Median\n 4 Police Service Representative II Full Time         78677. Greater than Median\n 5 Police Officer III               Full Time        109374. Greater than Median\n 6 Police Officer II                Full Time         95002. Greater than Median\n 7 Police Officer II                Full Time         95379. Greater than Median\n 8 Police Officer II                Full Time         95388. Greater than Median\n 9 Equipment Mechanic               Full Time         80496  Greater than Median\n10 Detention Officer                Full Time         69640  Greater than Median\n# ℹ 14,814 more rows\n```\n\n\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  group_by(employment_type) %>% \n  summarize(med_base_pay = median(base_pay))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  employment_type med_base_pay\n  <fct>                  <dbl>\n1 Full Time             97996.\n2 Part Time             14474.\n3 Per Event              4275 \n```\n\n\n:::\n:::\n\n\n\n\n\n##\n\nWe can also remind ourselves how many staff members there were in each group.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapd %>% \n  group_by(employment_type) %>% \n  summarize(med_base_pay = median(base_pay),\n            count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  employment_type med_base_pay count\n  <fct>                  <dbl> <int>\n1 Full Time             97996. 14664\n2 Part Time             14474.   132\n3 Per Event              4275     28\n```\n\n\n:::\n:::\n\n\n\nNote that `n()` does not take any arguments.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}