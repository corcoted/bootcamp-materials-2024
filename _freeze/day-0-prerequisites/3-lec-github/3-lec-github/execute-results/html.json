{
  "hash": "bbd3a4f28ea7fe50e9644b2140ba7374",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Git and GitHub\"\nsubtitle: \"Prerequisites\"\nformat: \n  revealjs:\n    slide-number: true\n    incremental: true\n    theme: [\"../../templates/slides-style.scss\"]\n    logo: https://www.stat.uci.edu/bayes-bats/img/logo.png\n    title-slide-attributes: \n      data-background-image: https://www.stat.uci.edu/bayes-bats/img/logo.png\n      data-background-size: 12%\n      data-background-position: 50% 75%\n---\n\n\n\n\n:::{.font75}\n\nversion control\n\n:::\n\n\n\n##\n\nhw1\n\n\n\nhw1_final\n\n\n\nhw1_final2\n\n\n\nhw1_final3\n\n\n\nhw1_finalwithfinalimages\n\n\n\nhw1_finalestfinal\n\n##\n\nWhat if we tracked our file with a better names for each version and have only 1 file **hw1**?\n\n\n\n- hw1 **added questions 1 through 5**\n\n\n\n- hw1 **changed question 1 image**\n\n\n\n- hw1 **fixed typos**\n\n\n\nWe will call the descriptions in bold **commit** messages.\n\n\n\n## git vs. GitHub\n\n- git allows us to keep track of different versions of a file(s).\n\n- GitHub is a website where we can store (and share) different versions of the files. \n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.002.jpeg){fig-align='center' width=40%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.003.jpeg){fig-align='center' width=55%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.004.jpeg){fig-align='center' width=55%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.005.jpeg){fig-align='center' width=55%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.006.jpeg){fig-align='center' width=55%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/github-illustration.007.jpeg){fig-align='center' width=55%}\n:::\n:::\n\n\n\n\n\n\n## Demo\n\n\n\n\n## Cloning a repo\n\n**repo** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.\n\nFor this class our weekly repos (lecture code, quiz code etc.) are hosted on Github. \n\nTo **clone** a GitHub repo to our computer, we first copy the cloning link as shown in screencast then start an RStudio project using that link.  \n\n**Cloning** a repo pulls (downloads) all the elements of a repo available at that specific time. \n\n\n\n## Commits\n\nOnce you make changes to your repo (e.g. take notes during lecture). you can take a snapshot of your changes with a commit.\n\nThis way if you ever have to go back in version history you have your older commits to get back to. \nThis is especially useful, for instance, if you want to go back to an earlier solution you have committed.\n\n\n\n## Push\n\nAll the commits you make will initially be local (i.e. on your own computer). \n\nIn order for me to see your commits and the current version of any doc you are working on, you have to **push** your commits. In other words upload your files at the stage in that specific time.\n\n\n\n\n## (An incomplete) Git/GitHub glossary\n\n**Git:** is software for tracking changes in any set of files\n\n**GitHub:** is an internet host for Git projects.\n\n**repo:** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.\n\n**clone:** Cloning a repo **pulls** (downloads) all the elements of a repo available at that specific time. \n\n**commit:** A snapshot of your repo at a specific point in time. We distinguish each commit with a **commit message**. \n\n**push:** Uploads the latest \"committed\" state of your repo to GitHub.\n\n##\n\n:::{font75}\n\nDo you git it?\n\n:::\n\n## How to work on the next set of videos\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}