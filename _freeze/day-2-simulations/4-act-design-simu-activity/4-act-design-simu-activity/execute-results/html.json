{
  "hash": "8463a317d00935b17e74d3d534660061",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Designing A Simulation Activity\"\nsubtitle: \"Day 2\"\ntitle-block-banner: true\nformat:\n  html:\n    toc: true\n    toc-title: \"Content\"\n    toc-location: left\n    html-math-method: katex\n    theme: [\"../../templates/activity-style.scss\"]\n    page-layout: full\n---\n\n\n\n\n## Plan\n\nIn this Designing a simulation activity, we would like to:\n\n1. Present a possible simulation activity focused on Gibbs sampler (about 20 minutes)\n\n2. Break into smaller working groups to brainstorm and collaborate on designing a simulation activity (about 60 minutes)\n\n3. Come back to a large group sharing (about 45 minutes)\n\n## Simulation activity: Gibbs sampler of a beta-binomial\n\nA classical early paper on Gibbs sampler is [\"Explaining the Gibbs Sampler\"](https://www.tandfonline.com/doi/abs/10.1080/00031305.1992.10475878) by Geroge Casella and Edward I. George, appeared in The American Statistician in 1992, soon after the Gibbs sampler and other Markov chain Monte Carlo (MCMC) techniques were proposed. It contains toy examples of how Gibbs sampler works with illustrative use cases through simulation. In this activity, we will introduce and practice replicating results in Example 1 from this paper.\n\nThis activity is adapted from Lab 3 of [Vassar College's MATH 347 Bayesian Statistics](https://github.com/monika76five/Undergrad-Bayesian-Course). If you are interested in using this paper to explore Gibbs sampler further in your course, consider this [reading guide](https://github.com/monika76five/Undergrad-Bayesian-Course/blob/master/Lectures/4-GibbsMCMC/F19MATH347_ExpGibbsReadingGuide.pdf) and adapt to your needs.\n\n\n## The background of a beta-binomial\n\nA joint distribution of $X$ and $Y$ is given as\n\n\\begin{equation}\nf(x,y)\\propto \\binom{n}{x}y^{x+\\alpha-1}(1-y)^{n-x+\\beta-1},\\; x=-1,\\cdots \n,n,\\; 0\\leq y\\leq 1.\n\\end{equation}\n\n\\noindent Suppose we are interested in calculating some characteristics of the marginal distribution $f(x)$ of $X$.The Gibbs sampler allows us to generate a sample from this marginal. The full conditional posterior\ndistribution of $X$ and $Y$ are given as\n\n\\begin{equation}\nx \\mid y,n,\\alpha,\\beta \\sim \\textrm{Binomial}(n,y),\n\\end{equation}\n\n\\begin{equation}\ny \\mid x,n,\\alpha,\\beta\\sim \\text{Beta}(x+\\alpha,n-x+\\beta).\n\\end{equation}\n\nIn addition, the marginal distribution of $X$ can be obtained analytically, as\n\n\\begin{equation}\nf(x)=\\binom{n}{x}\\frac{\\Gamma(\\alpha+\\beta)}{\\Gamma(\\alpha)\\Gamma(\\beta)}\\frac{\\Gamma(x+\\alpha)\\Gamma(n-x+\\beta)}{\\Gamma(\\alpha+\\beta+n)},x=0,1,\\cdots,n,\n\\end{equation}\nthe Beta-Binomial distribution.\n\n## Simulate from the beta-binomial distribution\n\nThe `VGAM` R package can simulate draws from the beta-binomial distribution. Install this package and load the library.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"VGAM\")\nlibrary(VGAM)\n```\n:::\n\n\nTo generate a random draw from $X \\sim \\textrm{Beta-Binomial}(n,a,b)$:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbetabinom.ab(1, n, a, b, .dontuse.prob = NULL)\n```\n:::\n\n\n\n## Simulate from a Gibbs sampler\n\nFollowing the full conditional posterior distributions for $x$ and $y$ in Equations (2) and (3), one can design a Gibbs sampler to generate draws of $x$ and $y$ iteratively.\n\n## Results shown in Figure 1 from Casella and George (1992)\n\nAccording to the paper, “Figure 1 displays histograms of two samples, $x_1, \\cdots, x_m$ of size $m = 500$ from the Beta-Binomial distribution with $n = 16, \\alpha = 2$, and $\\beta = 4$.”\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| fig-cap: Figure 1 from Casella and George (1992).\n#| out-width: 40%\nknitr::include_graphics(\"img/PaperFigure1.png\")\n```\n````\n\n::: {.cell-output-display}\n![Figure 1 from Casella and George (1992).](img/PaperFigure1.png){width=40%}\n:::\n:::\n\n\n\n## Step-by-step exercises to replicate results in Figure 1\n\n1. Use the `rbetabinom.ab()` command to directly generate $m$ draws of $x$, which follows a beta-binomial distribution as shown in Equation (4). Note that $m = 500, n = 16, \\alpha = 2, \\beta = 4$. Make a histogram of the $m$ draws you have generated.\n\nAccording to the caption of Figure 1, ``The black histogram sample was obtained using Gibbs sampling with $k = 10$.\" Read Section 2 of the paper carefully to see how they implemented the Gibbs sampler.\n\n2. According to the Gibbs sampler implementation described in the paper, how many Gibbs samplers/MCMC chains do we need to run?\n\n3. Write a Gibbs sampling scheme to generate $m$ draws of $x$. Note that $m = 500,n = 16, \\alpha = 2, \\beta = 4$ and $k = 10$. Make a histogram of the $m$ draws you have generated.\n\n4. Make a side-by-side histogram showing the two samples, one generated in Exercise 1, and the other generated in Exercise 3. (Hint: you can use the following R script to do a side-by-side histogram. The demo below assumes `BetaBinomialDraws` storing the draws from Exercise 1 and `BetaBinomialDrawsGibbs` storing the draws from Exercise 3.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"plotrix\")\nlibrary(plotrix)\n\nl <- list(BetaBinomialDraws, BetaBinomialDrawsGibbs)\nmulthist(l, breaks = seq(-0.5, 16.5, by = 1))\n```\n:::\n\n\n\n## Solutions to exercises\n\nBelow we include texts and/or R code (without outputs) as solutions to these exercises for your reference.\n\n1. R code solution below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(VGAM)\n\nset.seed(123)\nm <- 500\nn <- 16\na <- 2\nb <- 4\nBetaBinomialDraws <- rbetabinom.ab(m, n, a, b, .dontuse.prob=NULL)\nhist(BetaBinomialDraws, breaks=30)\n```\n:::\n\n\n\n2. Since the paper is simulating $m = 500$ short Gibbs sampler, we need to run $m = 500$ Gibbs sampler/MCMC chains.\n\n3. R code solution below\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nk <- 10\nBetaBinomialDrawsGibbs <- rep(NA, m)\nfor (i in 1:m){\n    y <- rbeta(1, 1, 1)\n    for (s in 1:k){\n        x <- rbinom(1, n, y)\n        y <- rbeta(1, x + a, n - x + b)\n    }\n    BetaBinomialDrawsGibbs[i] <- x\n}\n\nhist(BetaBinomialDrawsGibbs, breaks = 30)\n```\n:::\n\n\n\n4. R code solution below\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"plotrix\")\nlibrary(plotrix)\n\nl <- list(BetaBinomialDraws, BetaBinomialDrawsGibbs)\nmulthist(l, breaks = seq(-0.5, 16.5, by = 1))\n```\n:::\n\n\n\n## Thoughts and ideas for creating this simulation activity\n\n1. Casella and George (1992), whose Example 1 forms the basis of this simulation activity, is a well-regarded and accessible paper (some parts) for students. The paper can be used for a deeper dive of Gibbs sampler for a variety of audience.\n\n2. Beta-binomial presents a new use case of Gibbs sampler. Students (should) already have some background knowledge of the beta-binomial conjugacy so they are familiar with the setup.\n\n3. There exists an R function (`rbetabinom.ab()`) to directly sample from the marginal beta-binomial distribution, thus we have a \"true\" posterior distribution to compare our Gibbs sampler results to.\n\n4. Casella and George (1992) Example 1 illustrates a less common approach to MCMC, i.e., running a large number of shorter MCMC chains, as opposed to running one or a few long MCMC chains. This approach is worth detailed discussion in class to illustrate various aspects of MCMC and MCMC diagnostics. Moreover, understanding the setup of Example 1 deepens students' understanding of Gibbs sampler as well as sharpens their R coding skills.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}